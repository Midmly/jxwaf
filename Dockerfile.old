################################################
# Dockerfile to build jxWAF container images   #
# Based on centos 8                            #
#                                              #
################################################
#Set the base image to jessie
FROM centos:8
#File Author
MAINTAINER Wuluoyong

RUN yum -y update \
    && yum install -y epel-release pcre-devel openssl-devel gcc cmake make curl gcc-c++ automake wget lua \
    && yum clean all
RUN cd /tmp \
    && wget http://rpmfind.net/linux/centos/8-stream/PowerTools/x86_64/os/Packages/lua-devel-5.3.4-11.el8.x86_64.rpm \
    && rpm -ivh lua-devel-5.3.4-11.el8.x86_64.rpm \
    && rm -rf lua-devel-5.3.4-11.el8.x86_64.rpm
ADD jxwaf /tmp/jxwaf
RUN cd /tmp/jxwaf \
    && tar zxvf openresty-1.15.8.3.tar.gz \
    && tar zxvf libmaxminddb-1.3.2.tar.gz \
    && tar zxvf aliyun-log-c-sdk-lite.tar.gz \
    && tar zxvf curl-7.64.1.tar.gz \
    && cd curl-7.64.1 \
    && make \
    && make install \
    && cd ../openresty-1.15.8.3 \
    && ./configure --prefix=/opt/jxwaf --with-http_v2_module && gmake && gmake install \
    && mv /opt/jxwaf/nginx/conf/nginx.conf  /opt/jxwaf/nginx/conf/nginx.conf.bak \
    && cp ../conf/nginx.conf /opt/jxwaf/nginx/conf/ \
    && cp ../conf/full_chain.pem /opt/jxwaf/nginx/conf/ \
    && cp ../conf/private.key /opt/jxwaf/nginx/conf/ \
    && mkdir /opt/jxwaf/nginx/conf/jxwaf \
    && cp ../conf/jxwaf_config.json /opt/jxwaf/nginx/conf/jxwaf/ \
    && cp ../conf/GeoLite2-Country.mmdb /opt/jxwaf/nginx/conf/jxwaf/ \
    && cp -r ../lib/resty/jxwaf  /opt/jxwaf/lualib/resty/ \
    && cd ../libmaxminddb-1.3.2 \
    && ./configure \
    && make \
    && cp src/.libs/libmaxminddb.so.0.0.7 /opt/jxwaf/lualib/libmaxminddb.so \
    && cd ../aliyun-log-c-sdk-lite \
    && cmake . \
    && make \
    && cp build/lib/liblog_c_sdk.so.2.0.0 /opt/jxwaf/lualib/liblog_c_sdk.so \
    && cd /tmp \
    && rm -rf jxwaf
RUN yum -y update && yum -y install python3 && yum clean all && pip3 install --upgrade pip && pip3 install requests
ADD docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh
ADD tools /opt/jxwaf/tools
RUN chmod +x /usr/local/bin/docker-entrypoint.sh
ENTRYPOINT ["docker-entrypoint.sh"]
EXPOSE 80 443
CMD ["/opt/jxwaf/nginx/sbin/nginx","-g","daemon off;"]